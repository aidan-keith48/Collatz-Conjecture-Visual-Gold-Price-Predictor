// This file was auto-generated by ML.NET Model Builder. 

using System;

namespace GoldPriceModel_ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            // predict with default option.
            var modelOutput = GoldPriceModel.Predict();
            Console.WriteLine("   Lower Bound Predictions:");
            PrintMatrix(modelOutput.Gold_Price_USD_per_Ounce_LB);

            Console.WriteLine("\n");

            // predict next 5 periods
            modelOutput = GoldPriceModel.Predict(horizon: 5);
            Console.WriteLine("   Upper Bound Predictions:");
            PrintMatrix(modelOutput.Gold_Price_USD_per_Ounce_UB);

            Console.ReadKey();

            // update and predict model
            // TBD
        }

        /// <summary>
        /// Prints the predictions in a matrix format.
        /// </summary>
        /// <param name="predictions">The array of predictions.</param>
        private static void PrintMatrix(float[] predictions)
        {
            int columns = 5; // Number of columns in the matrix
            int rows = (int)Math.Ceiling(predictions.Length / (double)columns);

            for (int i = 0; i < rows; i++)
            {
                for (int j = 0; j < columns; j++)
                {
                    int index = i * columns + j;
                    if (index < predictions.Length)
                    {
                        Console.Write($"{predictions[index],10:F2} ");
                    }
                }
                Console.WriteLine();
            }
        }
    }
}

